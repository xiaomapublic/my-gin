// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Score                int64    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Member               string   `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReq) Reset()         { *m = SetReq{} }
func (m *SetReq) String() string { return proto.CompactTextString(m) }
func (*SetReq) ProtoMessage()    {}
func (*SetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *SetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReq.Unmarshal(m, b)
}
func (m *SetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReq.Marshal(b, m, deterministic)
}
func (m *SetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReq.Merge(m, src)
}
func (m *SetReq) XXX_Size() int {
	return xxx_messageInfo_SetReq.Size(m)
}
func (m *SetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetReq proto.InternalMessageInfo

func (m *SetReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetReq) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *SetReq) GetMember() string {
	if m != nil {
		return m.Member
	}
	return ""
}

type RangeReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Start                int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeReq) Reset()         { *m = RangeReq{} }
func (m *RangeReq) String() string { return proto.CompactTextString(m) }
func (*RangeReq) ProtoMessage()    {}
func (*RangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *RangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeReq.Unmarshal(m, b)
}
func (m *RangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeReq.Marshal(b, m, deterministic)
}
func (m *RangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeReq.Merge(m, src)
}
func (m *RangeReq) XXX_Size() int {
	return xxx_messageInfo_RangeReq.Size(m)
}
func (m *RangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_RangeReq proto.InternalMessageInfo

func (m *RangeReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RangeReq) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RangeReq) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type SetResp struct {
	Data                 bool     `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetResp) Reset()         { *m = SetResp{} }
func (m *SetResp) String() string { return proto.CompactTextString(m) }
func (*SetResp) ProtoMessage()    {}
func (*SetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *SetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResp.Unmarshal(m, b)
}
func (m *SetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResp.Marshal(b, m, deterministic)
}
func (m *SetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResp.Merge(m, src)
}
func (m *SetResp) XXX_Size() int {
	return xxx_messageInfo_SetResp.Size(m)
}
func (m *SetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetResp proto.InternalMessageInfo

func (m *SetResp) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

type RangeResp struct {
	Data                 []string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeResp) Reset()         { *m = RangeResp{} }
func (m *RangeResp) String() string { return proto.CompactTextString(m) }
func (*RangeResp) ProtoMessage()    {}
func (*RangeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *RangeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeResp.Unmarshal(m, b)
}
func (m *RangeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeResp.Marshal(b, m, deterministic)
}
func (m *RangeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeResp.Merge(m, src)
}
func (m *RangeResp) XXX_Size() int {
	return xxx_messageInfo_RangeResp.Size(m)
}
func (m *RangeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeResp.DiscardUnknown(m)
}

var xxx_messageInfo_RangeResp proto.InternalMessageInfo

func (m *RangeResp) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*SetReq)(nil), "test.SetReq")
	proto.RegisterType((*RangeReq)(nil), "test.RangeReq")
	proto.RegisterType((*SetResp)(nil), "test.SetResp")
	proto.RegisterType((*RangeResp)(nil), "test.RangeResp")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xa9, 0x59, 0xbb, 0x9b, 0xf1, 0x2f, 0x83, 0x48, 0x59, 0x10, 0x97, 0x9c, 0x72, 0xca,
	0x41, 0x3f, 0x81, 0xe0, 0xc1, 0x73, 0xd6, 0x93, 0xb7, 0xb4, 0x1d, 0xa4, 0x48, 0xdb, 0x98, 0xcc,
	0xc5, 0x6f, 0x2f, 0x49, 0xaa, 0xd8, 0x83, 0xb7, 0xf7, 0x63, 0x7e, 0xbc, 0xf6, 0x05, 0xa4, 0xf3,
	0x83, 0xf1, 0x61, 0xe6, 0x19, 0x37, 0x4c, 0x91, 0xd5, 0x0b, 0xd4, 0x47, 0x62, 0x4b, 0x9f, 0x78,
	0x0d, 0xe2, 0x83, 0xbe, 0x9a, 0xea, 0x50, 0x69, 0x69, 0x53, 0xc4, 0x1b, 0x38, 0x8d, 0xdd, 0x1c,
	0xa8, 0x39, 0x39, 0x54, 0x5a, 0xd8, 0x02, 0x78, 0x0b, 0xf5, 0x48, 0x63, 0x4b, 0xa1, 0x11, 0x59,
	0x5d, 0x48, 0x3d, 0xc3, 0xce, 0xba, 0xe9, 0x9d, 0xfe, 0xef, 0x62, 0x17, 0xf8, 0xb7, 0x2b, 0x41,
	0xf2, 0x68, 0xea, 0x73, 0x91, 0xb0, 0x29, 0xaa, 0x3b, 0xd8, 0xe6, 0xff, 0x89, 0x1e, 0x11, 0x36,
	0xbd, 0x63, 0x97, 0xaf, 0x3b, 0x9b, 0xb3, 0xba, 0x07, 0xb9, 0x7c, 0x64, 0x25, 0x08, 0x2d, 0x8b,
	0xf0, 0xd0, 0xc1, 0xf6, 0x95, 0x22, 0x3f, 0xf9, 0x01, 0x35, 0xc8, 0x40, 0xfd, 0x10, 0xdf, 0x8e,
	0xc4, 0x78, 0x6e, 0xd2, 0x5c, 0x53, 0xb6, 0xee, 0x2f, 0xfe, 0x50, 0xf4, 0x68, 0xe0, 0xac, 0x98,
	0xb9, 0x1b, 0x2f, 0xcb, 0xf5, 0x67, 0xcd, 0xfe, 0x6a, 0xc5, 0xd1, 0xb7, 0x75, 0x7e, 0xc1, 0xc7,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x5c, 0xf8, 0x19, 0x4e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestApiClient is the client API for TestApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestApiClient interface {
	RedisZSet(ctx context.Context, in *SetReq, opts ...grpc.CallOption) (*SetResp, error)
	RedisZRange(ctx context.Context, in *RangeReq, opts ...grpc.CallOption) (*RangeResp, error)
}

type testApiClient struct {
	cc *grpc.ClientConn
}

func NewTestApiClient(cc *grpc.ClientConn) TestApiClient {
	return &testApiClient{cc}
}

func (c *testApiClient) RedisZSet(ctx context.Context, in *SetReq, opts ...grpc.CallOption) (*SetResp, error) {
	out := new(SetResp)
	err := c.cc.Invoke(ctx, "/test.TestApi/redisZSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testApiClient) RedisZRange(ctx context.Context, in *RangeReq, opts ...grpc.CallOption) (*RangeResp, error) {
	out := new(RangeResp)
	err := c.cc.Invoke(ctx, "/test.TestApi/redisZRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestApiServer is the server API for TestApi service.
type TestApiServer interface {
	RedisZSet(context.Context, *SetReq) (*SetResp, error)
	RedisZRange(context.Context, *RangeReq) (*RangeResp, error)
}

// UnimplementedTestApiServer can be embedded to have forward compatible implementations.
type UnimplementedTestApiServer struct {
}

func (*UnimplementedTestApiServer) RedisZSet(ctx context.Context, req *SetReq) (*SetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedisZSet not implemented")
}
func (*UnimplementedTestApiServer) RedisZRange(ctx context.Context, req *RangeReq) (*RangeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedisZRange not implemented")
}

func RegisterTestApiServer(s *grpc.Server, srv TestApiServer) {
	s.RegisterService(&_TestApi_serviceDesc, srv)
}

func _TestApi_RedisZSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestApiServer).RedisZSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.TestApi/RedisZSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestApiServer).RedisZSet(ctx, req.(*SetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestApi_RedisZRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestApiServer).RedisZRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.TestApi/RedisZRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestApiServer).RedisZRange(ctx, req.(*RangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.TestApi",
	HandlerType: (*TestApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "redisZSet",
			Handler:    _TestApi_RedisZSet_Handler,
		},
		{
			MethodName: "redisZRange",
			Handler:    _TestApi_RedisZRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
